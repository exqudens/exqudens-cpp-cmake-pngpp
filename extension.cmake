# define macro 'message_status'
macro(message_status string)
    message(STATUS "${string}")
endmacro()

# define macro 'message_send_error'
macro(message_send_error string)
    message(SEND_ERROR "${string}")
endmacro()

# define macro 'message_fatal_error'
macro(message_fatal_error string)
    message(FATAL_ERROR "${string}")
endmacro()

# define macro 'set_home_prefix'
macro(set_home_prefix)
    if(${ARGC} EQUAL 0)
        if(WIN32)
            string(REPLACE "\\" "/" HOME_PREFIX "$ENV{USERPROFILE}")
        elseif(UNIX)
            set(HOME_PREFIX "$ENV{HOME}")
        else()
            message_fatal_error("Can't set HOME_PREFIX")
        endif()
    elseif("${ARGV0}" MATCHES "^$")
        set(HOME_PREFIX "")
    elseif("${ARGV0}" MATCHES "^[ \t\r\n]+.")
        message_status("Path starts with whitespace: '${ARGV0}'")
    elseif(NOT EXISTS "${ARGV0}")
        message_status("Not exists: '${ARGV0}'")
    elseif(NOT IS_DIRECTORY "${ARGV0}")
        message_status("Not is directory: '${ARGV0}'")
    else()
        set(HOME_PREFIX "${ARGV0}")
    endif()
endmacro()

# define macro 'set_packages_prefix' to set 'CMAKE_INSTALL_PREFIX'
macro(set_packages_prefix)
    if(${ARGC} EQUAL 0)
        set(PACKAGES_PREFIX "")
    elseif("${ARGV0}" MATCHES "^$")
        set(PACKAGES_PREFIX "")
    elseif("${ARGV0}" MATCHES "^[ \t\r\n]+.")
        message_status("Path starts with whitespace: '${ARGV0}'")
    elseif(NOT EXISTS "${ARGV0}")
        message_status("Not exists: '${ARGV0}'")
    elseif(NOT IS_DIRECTORY "${ARGV0}")
        message_status("Not is directory: '${ARGV0}'")
    else()
        set(PACKAGES_PREFIX "${ARGV0}")
    endif()
endmacro()

# define macro 'set_downloads_prefix'
macro(set_downloads_prefix)
    if(${ARGC} EQUAL 0)
        set(DOWNLOADS_PREFIX "")
    elseif("${ARGV0}" MATCHES "^$")
        set(DOWNLOADS_PREFIX "")
    elseif("${ARGV0}" MATCHES "^[ \t\r\n]+.")
        message_status("Path starts with whitespace: '${ARGV0}'")
    elseif(NOT EXISTS "${ARGV0}")
        message_status("Not exists: '${ARGV0}'")
    elseif(NOT IS_DIRECTORY "${ARGV0}")
        message_status("Not is directory: '${ARGV0}'")
    else()
        set(DOWNLOADS_PREFIX "${ARGV0}")
    endif()
endmacro()

# define macro 'init'
macro(init)
    if(${ARGC} EQUAL 0)
        set_home_prefix()
        set_packages_prefix(${HOME_PREFIX}/.cmake/packages)
        set_downloads_prefix(${HOME_PREFIX}/.cmake/downloads)
    elseif("${ARGV0}" MATCHES "^$")
        set_home_prefix("")
        set_packages_prefix(${HOME_PREFIX}/.cmake/packages)
        set_downloads_prefix(${HOME_PREFIX}/.cmake/downloads)
    elseif("${ARGV0}" MATCHES "^[ \t\r\n]+.")
        message_status("Path starts with whitespace: '${ARGV0}'")
    elseif(NOT EXISTS "${ARGV0}")
        message_status("Not exists: '${ARGV0}'")
    elseif(NOT IS_DIRECTORY "${ARGV0}")
        message_status("Not is directory: '${ARGV0}'")
    else()
        set_home_prefix("${ARGV0}")
        set_packages_prefix(${HOME_PREFIX}/.cmake/packages)
        set_downloads_prefix(${HOME_PREFIX}/.cmake/downloads)
    endif()
endmacro()

# define macro 'download'
macro(download directory file_name url)
    if(NOT EXISTS "${directory}")
        file(MAKE_DIRECTORY "${directory}")
    endif()
    if(${ARGC} EQUAL 4)
        if(EXISTS "${directory}/${file_name}.md5")
            file(READ "${directory}/${file_name}.md5" "old.${file_name}.md5")
            if("${old.${file_name}.md5}" STREQUAL "${ARGV3}")
                unset("${old.${file_name}.md5}")
                message_status("exists md5 '${directory}/${file_name}.md5'")
            else()
                unset("${old.${file_name}.md5}")
                file(WRITE "${directory}/${file_name}.md5" "${ARGV3}")
                message_status("saved md5 to '${directory}/${file_name}.md5'")
            endif()
        else()
            file(WRITE "${directory}/${file_name}.md5" "${ARGV3}")
            message_status("saved md5 to '${directory}/${file_name}.md5'")
        endif()
    endif()
    if(NOT EXISTS "${directory}/${file_name}" AND NOT EXISTS "${directory}/${file_name}.md5")
        file(DOWNLOAD "${url}" "${directory}/${file_name}")
        file(MD5 "${directory}/${file_name}" "${file_name}.md5")
        file(WRITE "${directory}/${file_name}.md5" "${${file_name}.md5}")
        unset("${${file_name}.md5}")
        message_status("downloaded '${url}' to '${directory}/${file_name}'")
        message_status("saved md5 '${url}' to '${directory}/${file_name}.md5'")
    elseif(NOT EXISTS "${directory}/${file_name}" AND EXISTS "${directory}/${file_name}.md5")
        file(DOWNLOAD "${url}" "${directory}/${file_name}")
        file(READ "${directory}/${file_name}.md5" "old.${file_name}.md5")
        file(MD5 "${directory}/${file_name}" "new.${file_name}.md5")
        if("${old.${file_name}.md5}" STREQUAL "${new.${file_name}.md5}")
            unset("${old.${file_name}.md5}")
            unset("${new.${file_name}.md5}")
            message_status("downloaded '${url}' to '${directory}/${file_name}'")
        else()
            file(REMOVE "${directory}/${file_name}")
            message_send_error("md5 check fail 'exist'/'new': '${old.${file_name}.md5}'/'${new.${file_name}.md5}'")
            unset("${old.${file_name}.md5}")
            unset("${new.${file_name}.md5}")
            message_fatal_error("removed '${directory}/${file_name}'")
        endif()
    elseif(EXISTS "${directory}/${file_name}" AND EXISTS "${directory}/${file_name}.md5")
        message_status("exists '${directory}/${file_name}' and '${directory}/${file_name}.md5'")
    else()
        message_send_error("not exists '${directory}/${file_name}.md5'")
        message_fatal_error("exists '${directory}/${file_name}'")
    endif()
endmacro()
